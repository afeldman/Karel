-- karel programming language based on pascal
--
-- a karel program example:
--
{-
        PROGRAM foo
        CONST
                a = 1
                b = 2
        TYPE
                test FROM bare
                STRUCTURE xyz_structure
                          test : INTEGER
                ENDSTRUCTURE
                test2 : xyz_structure
        VAR
                var1: test2
                var2: test
                var3: INTEGER
                var4, var5: CHAR
        ROUTINE do_something (k: BYTE; a: INTEGER; b: String)
        BEGIN
        END foo

        ROUTINE do_something
        VAR
                a: INTEGER
        CONST
        TYPE
        BEGIN
                IF (a=0; a < 1000; ++a) THEN
                   print("a") FROM bare
                ENDIF
        END do_something

-}

-- comments in karel are c style or haskell style.
-- I added a multiline haskell related command for karel

comment "--";

-- we wamt to use multiline comment. Because the single line  
-- commend is equivalent to the haskel commens
comment "-{" "-}";

-- tokens
token QuotedString '\'' ((char - ["'\\"]) | ('\\' ["'\\nt"]))* '\'';
token LineEnd ((';'|'\n')+) ;


-- each programm starts with a programm identifier followd by a compiler derictive
-- next the 
KarelGrammer. Karel ::= "PROGRAM" Ident ProgramBody Ident;

PBody. ProgramBody ::= "BEGIN" "END" ;
